version: '3.5'
services:
    nginx:
        image: nginx:${NGINX_VERSION}-alpine
        container_name: ${PROJECT_NAME}_nginx
        volumes:
            - .${HTDOCS_PATH_INDEX}:${HTDOCS_PATH_CONTAINER}
            - ./etc/nginx/crealoz_fr.template:/etc/nginx/conf.d/crealoz.template
        #command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/crealoz.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
        command: /bin/sh -c "envsubst '$$SRC_PATH_CONTAINER $$NGINX_HOST $$NGINX_PORT' < /etc/nginx/conf.d/crealoz.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        environment:
            - NGINX_HOST=${NGINX_HOST}
            - NGINX_PORT=${NGINX_PORT}
            - SRC_PATH_CONTAINER=${HTDOCS_PATH_CONTAINER}
        ports:
            - 80:80
        depends_on:
            - php
            - mysql
            - redis
    php:
        build:
            context: ./images/php
            args:
                - PHP_VERSION=${PHP_VERSION}
                - USER_ID=${USER_ID}
        container_name: ${PROJECT_NAME}_php
        restart: always
        volumes:
            - ./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini
            - .${HTDOCS_PATH_INDEX}:${HTDOCS_PATH_CONTAINER}
        depends_on:
            - mysql
            - redis
    mysql:
        image: mysql:${MYSQL_VERSION}
        container_name: ${PROJECT_NAME}_mysql
        restart: always
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_USER=${MYSQL_ROOT_USER}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_HOST=%
        ports: [3306]
        volumes:
            - mysql-data:/var/lib/mysql
            - ./data:/data
    redis:
        image: redis:5.0-alpine
        container_name: ${PROJECT_NAME}_redis
        restart: always
        ports:
            - 6379:6379
        volumes:
            - redis-data:/data
    node:
        build:
            context: ./images/yarn
        container_name: ${PROJECT_NAME}_node
        restart: always
        volumes:
            - .${HTDOCS_PATH_INDEX}:${HTDOCS_PATH_CONTAINER}
        command: /bin/sh -c "cd $$SRC_PATH_CONTAINER && yarn install && yarn encore dev --watch"
        environment:
            - SRC_PATH_CONTAINER=${HTDOCS_PATH_CONTAINER}
        depends_on:
            - nginx
volumes:
    mysql-data:
    redis-data: